Functionality:
    - AI: Create GPT response table in PostGres/make JDBC connection to it.
    - AI: Fix the issue with double pressing "send" twice on first prompt
    - AI: Create a user_prompt table and have a one-to-one dependency with gpt_responses table
    - AI: Have the responses follow the users instructions to the letter.
    - Notebook: Fix the issue with tabs being put at the bottom every update
    - Tasks: Have a side bar that allows for checking deleted and completed tasks, creating
        separate lists, and for changing background colors.
    - Tasks: When editing, have the previous info displayed
    - Tasks: Try to add a radio button to quickly complete tasks. Modulate the data and description parts of each task,
        this will allow for quick changes

Aesthetics:
    - I guess play around with css and see what looks good

Future plans:
    - Implement JPackage for this project that it can be downloaded.



Learning log:
- The @Controller annotation is used to handle web requests and returns views like an HTML page. On the other hand,
    @RestController is used to handle JSON. This allows for smooth communication between SpringBoot and the DB.
- Using a Data Transfer Object (DTO) can be useful in some cases as there may be information that should left out before
    presenting it to the user. It makes manipulating data easier and adds a layer of security.
- Streams in java allow for handling and manipulating data as it flows like arrays, lists, and data structures.
    Streams can end by using a collect() method, which is a terminal operation.
- Generics are erased at runtime, so returning any type of generic wouldn't really work.